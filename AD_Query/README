Alzheimer's Disease Gene Query Program
Author: Galil Gertner
Date: 3.29.17

To run:
python3 AD_Query.py (Entry point)

Requirments:

This program uses the following:
    - Python 3.5.1
    - Cassandra
    - neo4j
        - neo4j-driver
    - mySQL
        - pymysql
    - monggodb
        - pymongo, pymongo.MongoClient
        - xmltodict
    - redis

Goal:
    To find and create the correct database for each of the input files and
    data types.

Tasks:
    1. Create a database for all of the gene values for a sample of
       patients on the scale of no alzheimers disease to full alzheimers
       disease, and create the ability for the user to query the mean
       values for those genes and standard deviation from the mean
       among the sample patients.
    2. Create a database of the patients, their age, sex, and level
       of education.
    3. Create a database detailing all of the gene's relations to other genes.
    4. Create a database detailing all of the information we know of a
       particular gene.

Synopsis:

    1. Created and functional. I chose to use cassandra for the database
       because it can
       accomodate that many columns.
       In order to access the information given in the ROSMAP file as a
    2. I loaded this into a classic SQL database because it seems to fit the
       mold. Functions well.
    3. I have created a python script that can load all of the relations in
       the BIOGRID map exceptionally fast -- in under a minute into neo4j
       detailing the relations between the genes, but I have yet
       to to create the query classes correctly.
    4. Implemented as a mongoDB query.  Takes the xml, converts it to a
       dict, then to JSON, and loads while streaming into mongoDB
       into a database called uniprot, collection called genes.
